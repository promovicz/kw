K's primitives are designed to fit a large range of diverse functionality within the ASCII character set. This makes it typable on a keyboard, while keeping the language expressive and interesting to use.

All of K's primitives are made to be multipurpose, and have varied meanings based on the context they are used in. Symbol primitives can be either 1 or 2 characters long.

== Verbs ==
Single argument forms(monadic) listed first, two-argument forms(dyadic) listed second.

Empty cells indicate that the primitives are the same as K4-K6.
{| class="wikitable"
|+ Table of operator verbs in major dialects
|-
! rowspan=2|
! colspan="2" |[[K3]]!! colspan="2" |[[K4]],[[K5]],[[K6]] !! colspan="2" |[[K9]]<sup>*</sup>
|-
!monad
!dyad
!                            monad!!dyad!!monad!!dyad
|-
| <code>:</code>
|
| || [[right|identity]] || [[right]]       || ||
|-
| <code>+</code>
|
| || [[transpose]]   || [[add]]         || [[transpose]]||[[add]]
|-
| <code>-</code>
|
| || [[negate]]      || [[subtract]]    || [[negate]]||[[subtract]]
|-
| <code>*</code>
|
| || [[first]]       || [[multiply]]    || [[first]]||[[multiply]]
|-
| <code>%</code>
| [[reciprocal]]
| || [[square root]] || [[divide]]      || ||[[divide]]
|-
| <code>!</code>
|
| [[rotate]], [[mod]] || [[enum]], [[odometer]], [[keys]] || [[mod]], [[create dict]] || [[enum]] ([[odometer]]), [[keys]]||[[create dict]]
|-
| <code>&amp;</code>
|
| || [[where]]   || [[min]]         || [[where]]||[[min]]
|-
| <code>&#124;</code>
|
| || [[reverse]] || [[max]]         || [[reverse]]||[[max]]
|-
| <code>&lt;</code>
|
| || [[grade up]]  || [[lesser]]      || [[Grade up|ascending]]||[[lesser]]
|-
| <code>&gt;</code>
|
| || [[grade down]]|| [[greater]]     || [[Grade down|descending]]||[[greater]]
|-
| <code>=</code>
|
| || [[group]], [[identity matrix]] || [[equal]] || [[group]]||[[equal]]
|-
| <code>~</code>
|
| || [[not]]         || [[match]]       || [[not]]||[[match]]
|-
| <code>,</code>
|
| || [[enlist]]      || [[concatenate]] || [[enlist]]||[[concatenate]]
|-
| <code>^</code>
|[[shape]]
|[[power]]|| [[null?]]       || [[except]], [[fill]] || [[sort]] || [[cut]]
|-
| <code>#</code>
|
| || [[length]]      || [[take]], [[reshape]]|| [[count]]|| [[filter]], [[take]]
|-
| <code>_</code>
|
| || [[floor]], [[lowercase]] || [[drop]], [[delete]], [[cut]] || [[floor]]|| [[Filter|filter-out]], [[drop]]
|-
| <code>$</code>
|
| || [[string]]      || [[pad]], [[cast]] || [[string]]||[[parse]]
|-
| <code>?</code>
|
| || [[distinct]], [[random-float]] || [[find]], [[random]] || [[unique]]||[[find]], [[random]]
|-
| <code>@</code>
|[[Type|atom?]]
| || [[type]]        || [[at]]            || [[type]]|| [[cast]]
|-
| <code>.</code>
|
| || [[eval]], [[values]]        || [[dot]]           || [[eval]]||[[dot]]
|}
{| class="wikitable"
|+Table of special forms
!
!Polyadic Name
|-
|<code>@</code>
|[[amend]]
|-
|<code>.</code>
|[[deep amend]], [[try]]
|-
|<code>$</code>
|[[if]]
|-
|<code>!</code>
|[[update]] (K4/qdb)
|-
|<code>?</code>
|[[splice]]
|-
|<code>?</code>
|[[select]] (K4/qdb)
|}

{| class="wikitable"
|+Table of named verbs in various implementations
!
![[OK|oK]]
![[K7]]
![[K9]]<sup>*</sup>
|-
|utility
| [[in]] [[prm]]
| [[in]] [[within]] [[bin]] [[like]] [[find]] [[freq]] [[prm]] [[cmb]]
|[[in]] [[bin]] [[within]] [[prm]] [[freq]] [[cmb]]
|-
|math
| [[sin]] [[cos]] [[exp]] [[log]]
| [[sqrt]] [[sin]] [[cos]] [[abs]] [[log]] [[exp]] [[rand]]
|[[sin]] [[cos]] [[log]] [[div]] [[exp]] [[sqr]] [[sqrt]] [[Dot product|dot]] [[bar]] [[deltas]] [[sum]] [[sums]] [[rand]]
|-
|stats
|
|[[count]] [[first]] [[last]] [[min]] [[max]] [[sum]] [[avg]] [[var]] [[dev]] [[med]]
|[[count]] [[first]] [[last]] [[avg]] [[med]] [[mode]] [[var]] [[mavg]] [[msum]]
|-
|table([[K7]]+)
|
|[[asc]] [[dsc]] [[key]]
|[[top]] [[key]] [[unkey]] [[meta]]
|-
|misc
|
|[[min]] [[max]] [[asc]]
|[[min]] [[max]] [[countd]]
|}

==Adverbs ==

{| class="wikitable"
|-
! !! [[K3]],[[K4]],[[K5]],[[K6]]!! [[K9]]<sup>*</sup>
|-
| <code>'</code>|| [[each]] | [[binary search]]<sup>*</sup><sup>*</sup> ||[[Each|each]] | [[binary search]]<sup>*</sup><sup>*</sup>
|-
| <code>/</code>|| [[over]] | [[fixedpoint]] | [[for]] | [[while]] | [[join]]<sup>*</sup><sup>*</sup> | [[base encode]]||[[over]] | [[join]]<sup>*</sup><sup>*</sup> | [[base encode]]
|-
|<code>\</code>|| [[scan]] | [[scan-fixedpoint]] | [[scan-for]] | [[scan-while]] | [[split]]<sup>*</sup><sup>*</sup> | [[base decode]]||[[scan]] | [[split]]<sup>*</sup><sup>*</sup> | [[base decode]]
|-
|<code>':</code>||[[each prior]] | [[windows]]||[[each prior]]
|-
|<code>/:</code>||[[each right]]||[[each right]]
|-
|<code>\:</code>||[[each left]]||[[each left]]
|}

'''<sup>*</sup>''': K9 is a nascent dialect which is still currently undergoing changes. Some pages may not be up to date with the latest build, and some are intentionally left unwritten in case of later changes.

'''<sup>*</sup><sup>*</sup>''': The primitives [[base encode]], [[base decode]], [[binary search]], [[join]] and [[split]] are verbs in the adverb syntax space. They are distinguished by argument type.

[[Category:Adverbs]]
[[Category:Verbs]]
[[Category:Named verbs]]
[[Category:Operator verbs]]
[[Category:Special forms]]
[[Category:Primitives]]
